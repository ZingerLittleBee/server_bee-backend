# Builder
FROM node:alpine AS builder
RUN apk add --no-cache libc6-compat
RUN apk update

WORKDIR /app
RUN yarn global add turbo
COPY . .
RUN turbo prune --scope=hub --docker

# Installer
FROM node:alpine AS installer
RUN apk add --no-cache libc6-compat
RUN apk update

ENV DATABASE_URL="file:./serverhub.db"
# Hacked for build
ENV MONGODB_URI=mongodb://mongoadmin:secret@mongo:27017/

WORKDIR /app
RUN yarn global add pnpm
RUN yarn global add turbo

COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/pnpm-lock.yaml ./pnpm-lock.yaml
COPY --from=builder /app/out/pnpm-workspace.yaml ./pnpm-workspace.yaml
RUN pnpm install

COPY --from=builder /app/out/full/ .
COPY turbo.json turbo.json

# Uncomment and use build args to enable remote caching
# ARG TURBO_TEAM
# ENV TURBO_TEAM=$TURBO_TEAM

# ARG TURBO_TOKEN
# ENV TURBO_TOKEN=$TURBO_TOKEN

RUN SKIP_ENV_VALIDATION=1 turbo build

# Runner
FROM node:alpine AS runner
WORKDIR /app

COPY --from=installer /app/apps/hub/next.config.js .
COPY --from=installer /app/apps/hub/package.json .

# Automatically leverage output traces to reduce image size
# https://nextjs.org/docs/advanced-features/output-file-tracing
COPY --from=installer /app/apps/hub/.next/standalone ./
COPY --from=installer /app/packages/db/prisma/ .
COPY --from=installer /app/apps/hub/.next/static ./apps/hub/.next/static
# COPY --from=installer /app/apps/hub/public ./apps/hub/public

EXPOSE 3000

CMD node /app/apps/hub/server.js
